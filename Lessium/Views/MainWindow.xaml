<Window x:Class="Lessium.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:Lessium.Converters"
        xmlns:controls="clr-namespace:Lessium.ContentControls"
        xmlns:utility="clr-namespace:Lessium.Utility"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Width="1024" Height="768" Title="{Binding Title}" WindowStartupLocation="CenterScreen"
        x:Name="MainWindowReference"> <!-- Used to get Window instance -->
    
    <!--#region Resources -->
    
    <!-- Temp -->
    <!-- diag:PresentationTraceSources.TraceLevel=High -->
    
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:BooleanAndConverter x:Key="BooleanAndConverter" />
        <converters:NotNullConverter x:Key="NotNullConverter" />
        <converters:NotLastToVisibilityConverter x:Key="NotLastToVisibilityConverter" />

        <!-- Built-in -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <!-- Converter Chains -->

        <converters:ConverterChain x:Key="InverseVisiblityConverter">
            <converters:InverseBooleanConverter />
            <BooleanToVisibilityConverter />
        </converters:ConverterChain>

        <converters:ConverterChain x:Key="NotNullToVisbilityConverter">
            <converters:NotNullConverter />
            <BooleanToVisibilityConverter />
        </converters:ConverterChain>

        <!--#region Control Templates -->
        
        <ControlTemplate x:Key="AddSectionButton" TargetType="Button">
            <Border x:Name="border" Background="LightSteelBlue"
                    HorizontalAlignment="Stretch" Height="Auto">
                <StackPanel Orientation="Horizontal">
                    <Image x:Name="plusIcon" Source="{StaticResource ResourceKey=PlusIcon}" Margin="5,5,5,5"/>
                    <TextBlock x:Name="addSection" Text="{Binding AddSectionText}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="20,0,20,0"
                               Foreground="{TemplateBinding Foreground}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
        
        <!--#endregion-->
        
        <!--#region Styles -->

        <Style x:Key="AddSectionButtonStyle" TargetType="Button">
            <Style.Triggers>
                <Trigger Property="ToolTipService.IsEnabled" Value="True">
                    <Trigger.Setters>
                        <!-- Gray -->
                        <Setter Property="Foreground" Value="#ADADAD"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

    </Window.Resources>

    <!--#endregion-->

    <Grid x:Name="WindowGrid">
        
        <!--#region Grid Definitions -->

        <!-- Rows (percentage space) -->
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/> <!-- UI above content -->
            <RowDefinition Height="92*"/> <!-- Content (materials/tests) -->
            <RowDefinition Height="3*"/> <!-- ContentPage Counter -->
        </Grid.RowDefinitions>

        <!-- Columns (percentage space) -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*"/> <!-- Content sections -->
            <ColumnDefinition Width="80*"/> <!-- Content, settings, pages -->
        </Grid.ColumnDefinitions>
        
        <!--#endregion-->
        
        <!--#region Row 0 - Menu, UI -->
        
        <!--#region Menu-->
        
        <Menu Name="LessonMenu" HorizontalAlignment="Left" VerticalAlignment="Top">
            <MenuItem Width="40" Height="25" Header="{Binding LessonHeader}">
                <MenuItem Header="{Binding EditHeader}" Command="{Binding Lesson_Edit}"/>
                <MenuItem Header="{Binding UndoChangesHeader}" Command="{Binding Lesson_UndoChanges}" />
                <Separator />
                <MenuItem Header="{Binding RecentHeader}" />
                <Separator />
                <MenuItem Header="{Binding NewLessonHeader}" Command="{Binding Lesson_New}" />
                <!-- There's no need to do checks for IsEnabled, because Command already handles it. -->
                <MenuItem Header="{Binding SaveLessonHeader}" Command="{Binding Lesson_Save}" />
                <MenuItem Header="{Binding LoadLessonHeader}" />
                <MenuItem Header="{Binding CloseLessonHeader}" />
                <Separator />
                <MenuItem Header="{Binding PrintLessonHeader}" />
                <Separator />
                <MenuItem Header="{Binding ExitHeader}" />
            </MenuItem>
        </Menu>
        
        <!--#endregion-->
        
        <!--#region UI -->

        <!-- Settings, child window OnClick. TODO: Add credits to Settings -->

        <Button Content="{StaticResource ResourceKey=SettingsIcon}"
                Grid.Column="1" Width="32" Height="25"
                HorizontalAlignment="Right" VerticalAlignment="Top">
            <!-- Same size as Menu Header -->

        </Button>
        
        <!--#endregion-->
        
        <!--#endregion-->

        <!--#region Row 1 - Tabs and Content -->

        <!--#region Tabs -->

        <TabControl Name="Tabs" Grid.Row="1" Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="10,0,10,10" >

            <!-- Material -->
            <TabItem Name="MaterialHeader" Header="{Binding MaterialHeader}" >
                
                <!-- Interaction -->

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Materials"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </TabItem>

            <!-- Tests -->
            <TabItem Name="TestsHeader" Header="{Binding TestsHeader}">
                
                <!-- Interaction -->
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Tests"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
            </TabItem>

        </TabControl>
        
        <!--#endregion-->
        
        <!--#region Left part UI (border, buttons) -->

        <!-- Border serves as separator of Sections and (selected) Section content 
             Also used as container for Sections and AddSectionButton -->
        <Border BorderThickness="1" BorderBrush="DarkGray"
            Grid.Row="1" Margin="11,22,0,11"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">
                    <!-- Sections Headers -->
                    <ListBox x:Name="Sections" BorderThickness="0" HorizontalAlignment="Stretch"
                             ItemsSource="{Binding Sections}"
                             SelectedIndex="{Binding CurrentPageIndex, Mode=OneWay}"
                             SelectionChanged="Sections_SelectionChanged"
                             IsSynchronizedWithCurrentItem="True">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Title}" 
                                         Background="Transparent" 
                                         IsReadOnly="{Binding DataContext.ReadOnly, ElementName=MainWindowReference}"
                                         BorderThickness="0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                        <ListBox.Style>
                            <Style TargetType="{x:Type ListBox}">
                                <Style.Triggers>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </ListBox.Style>

                        <i:Interaction.Triggers>
                            
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TrySelectSection}" CommandParameter="{Binding ElementName=Sections, Path=SelectedValue}" />
                            </i:EventTrigger>
                            
                            <i:EventTrigger EventName="KeyDown">
                                <i:InvokeCommandAction Command="{Binding SectionInput}" />
                            </i:EventTrigger>
                            
                        </i:Interaction.Triggers>

                    </ListBox>

                    <!-- Add Section -->

                    <Button Template="{StaticResource AddSectionButton}" VerticalAlignment="Top" Height="25"
                            Command="{Binding AddSection}"
                            ToolTip="{Binding ReadOnlyToolTip}" 
                            ToolTipService.ShowOnDisabled="True" ToolTipService.IsEnabled="{Binding ReadOnly}" 
                            Style="{StaticResource AddSectionButtonStyle}">
                    </Button>
                
                </StackPanel>
            </ScrollViewer>
        </Border>
        
        <!--#endregion-->
        
        <!--#region Content Region -->

        <!-- StackPanel for SelectedSection -->

        <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1"
                    Margin="0,22,11,11">

            <!-- Content's Scroll -->

            <ScrollViewer x:Name="ContentScrollViewer" VerticalScrollBarVisibility="Auto" >
                <controls:Section x:Name="section">
                    <!-- Keep in mind that Section inherited from StackPanel! -->

                    <ItemsControl x:Name="SectionPages" BorderThickness="0" 
                                  ItemsSource="{Binding CurrentSection.Pages}">

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">

                                    <!-- Custom Toolbar -->

                                    <Border Height="26"
                                            HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                            BorderThickness="3" BorderBrush="Gray" >

                                        <Grid IsEnabled="{Binding ReadOnly, Converter={StaticResource InverseBooleanConverter}}" >
                                            <Menu>

                                                <Menu.Resources>

                                                    <Style x:Key="ContentItem" TargetType="MenuItem">
                                                        <Style.Setters>
                                                            <!-- Items should be only visible if suitable Tab selected, so they are collapsed if not -->
                                                            <Setter Property="IsEnabled" Value="False" />
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <!-- Passing ContentName to CommandParameter for later -->
                                                            <Setter Property="CommandParameter" Value="{Binding Name, RelativeSource={RelativeSource Self}}" />
                                                        </Style.Setters>

                                                    </Style>

                                                    <Style x:Key="MaterialItem" BasedOn="{StaticResource ContentItem}" TargetType="MenuItem">

                                                        <Setter Property="Command" Value="{Binding AddMaterial}" />

                                                        <Style.Triggers>

                                                            <DataTrigger Binding="{Binding SelectedTab}" Value="Materials">
                                                                <DataTrigger.Setters>
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>

                                                        </Style.Triggers>

                                                    </Style>

                                                    <Style x:Key="TestItem" BasedOn="{StaticResource ContentItem}" TargetType="MenuItem">

                                                        <Setter Property="Command" Value="{Binding AddTest}" />

                                                        <Style.Triggers>

                                                            <DataTrigger Binding="{Binding SelectedTab}" Value="Tests">
                                                                <DataTrigger.Setters>
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>

                                                        </Style.Triggers>

                                                    </Style>

                                                </Menu.Resources>

                                                <MenuItem ToolTip="{Binding ReadOnlyToolTip}" 
                                                          ToolTipService.ShowOnDisabled="True" ToolTipService.IsEnabled="{Binding ReadOnly}"
                                                          Width="22">
                                                    <MenuItem.Header>
                                                        <Image x:Name="addContentIcon" Source="{StaticResource ResourceKey=AddContentIcon}" Margin="-5,0,0,0"/>
                                                    </MenuItem.Header>

                                                    <!--#region Items -->
                                                    <!-- !!! Name PROPERTY SHOULD BE VALID CONTENT CONTROL TYPE! IT'S USED FOR BINDING! !!! -->

                                                    <!-- Materials -->

                                                    <MenuItem Name="Text" Header="{Binding TextHeader}" Style="{StaticResource MaterialItem}" />

                                                    <!-- Tests -->

                                                    <MenuItem Name="SimpleTest" Header="{Binding SimpleTestHeader}" Style="{StaticResource TestItem}" />
                                                </MenuItem>
                                            </Menu>

                                            <Image x:Name="removeContentIcon" Source="{StaticResource ResourceKey=RemoveContentIcon}" HorizontalAlignment="Right"
                                                   Margin="2,2,2,2"
                                                   ToolTip="{Binding ReadOnlyToolTip}" 
                                                   ToolTipService.ShowOnDisabled="True" ToolTipService.IsEnabled="{Binding ReadOnly}" >

                                            </Image>
                                        </Grid>

                                    </Border>

                                    <controls:ContentPage >
                                     <!--Page.Items--> 
                                    <ItemsControl x:Name="PageContent" BorderThickness="0" 
                                                ItemsSource="{Binding Path=Items, diag:PresentationTraceSources.TraceLevel=High}" />
                                    </controls:ContentPage>

                                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="20" 
                                               Fill="WhiteSmoke" >
                                        <Rectangle.Visibility>
                                            <MultiBinding Converter="{StaticResource NotLastToVisibilityConverter}">
                                                <Binding ElementName="SectionPages" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </Rectangle.Visibility>
                                    </Rectangle>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <ItemsControl.Style>
                            <Style TargetType="{x:Type ItemsControl}">

                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding ElementName=SectionPages, Path=Items.IsEmpty}" Value="True">
                                        <DataTrigger.Setters>
                                            <Setter Property="Focusable" Value="False"/>
                                        </DataTrigger.Setters>
                                    </DataTrigger>

                                </Style.Triggers>

                            </Style>

                        </ItemsControl.Style>
                    </ItemsControl>
                </controls:Section>
            </ScrollViewer>

        </StackPanel>

        <!--#endregion-->
        
        <!--#endregion-->
        
        <!--#endregion-->
        
        <!--#region Row 2 - ContentPage Counter-->

        <Border BorderBrush="Black" BorderThickness="1"
                Width="Auto" Height="20" Grid.Row="2" Grid.Column="1" Margin="0,0,11,1"
                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Visibility="{Binding CurrentPageIsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}" >

            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                <TextBox Text="{Binding CurrentPageNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         PreviewTextInput="CurrentPage_PreviewTextInput"
                         LostFocus="CurrentPage_LostFocus" >

                    <i:Interaction.Behaviors>
                        <utility:TextBoxEnterKeyUpdateBehavior />
                    </i:Interaction.Behaviors>

                </TextBox>
                <TextBlock Text="/" Padding="1" />
                <TextBlock Text="{Binding CurrentSection.Pages.Count}" Padding="0,1" />
            </StackPanel>

        </Border>

        <!--#endregion-->
        
    </Grid>
</Window>
