<Window x:Class="Lessium.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:Lessium.Converters"
        xmlns:controls="clr-namespace:Lessium.ContentControls"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Width="1024" Height="768" Title="{Binding Title}" WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:BooleanAndConverter x:Key="BooleanAndConverter" />
    </Window.Resources>

    <Grid>
        
        <!-- Rows (percentage space) -->
        <Grid.RowDefinitions>
            <RowDefinition Height="5*"/> <!-- UI above content -->
            <RowDefinition Height="95*"/> <!-- Content (materials/tests) -->
        </Grid.RowDefinitions>

        <!-- Columns (percentage space) -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*"/> <!-- Content sections -->
            <ColumnDefinition Width="80*"/> <!-- Content, settings, pages -->
        </Grid.ColumnDefinitions>
        
        <!-- Row 0 - Menu, UI above content -->

        <Menu Name="LessonMenu" HorizontalAlignment="Left" VerticalAlignment="Top">
            <MenuItem Width="40" Height="25" Header="{Binding LessonHeader}">
                <MenuItem Header="{Binding EditHeader}" Command="{Binding Lesson_Edit}"/>
                <MenuItem Header="{Binding UndoChangesHeader}" Command="{Binding Lesson_UndoChanges}" />
                <Separator />
                <MenuItem Header="{Binding RecentHeader}" />
                <Separator />
                <MenuItem Header="{Binding NewLessonHeader}" Command="{Binding Lesson_New}" />
                <!-- There's no need to do checks for IsEnabled, because Command already handles it. -->
                <MenuItem Header="{Binding SaveLessonHeader}" Command="{Binding Lesson_Save}" />
                <MenuItem Header="{Binding LoadLessonHeader}" />
                <MenuItem Header="{Binding CloseLessonHeader}" />
                <Separator />
                <MenuItem Header="{Binding PrintLessonHeader}" />
                <Separator />
                <MenuItem Header="{Binding ExitHeader}" />
            </MenuItem>
        </Menu>

        <!-- Settings, child window OnClick. TODO: Add credits to Settings -->

        <Button Content="{StaticResource ResourceKey=SettingsIcon}"
                Grid.Column="1" Width="32" Height="25"
                HorizontalAlignment="Right" VerticalAlignment="Top">
            <!-- Same size as Menu Header -->

        </Button>

        <!-- 1 Row - Tabs and Content -->

        <TabControl Name="Tabs" Grid.Row="1" Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="10,0,10,10">

            <!-- Material -->
            <TabItem Name="MaterialHeader" Header="{Binding MaterialHeader}" >
                
                <!-- Interaction -->
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Materials"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TextBlock Text="123123123123123" HorizontalAlignment="Stretch" Padding="15" />

            </TabItem>

            <!-- Tests -->
            <TabItem Name="TestsHeader" Header="{Binding TestsHeader}">
                
                <!-- Interaction -->
                
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Tests"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
            </TabItem>

        </TabControl>
        
        <!-- Sections -->

        <ListBox x:Name="Sections" BorderThickness="1" BorderBrush="DarkGray"
            Grid.Row="1" Margin="11,22,0,11"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
            ItemsSource="{Binding Sections}">

        </ListBox>

        <!--<controls:Section Title="Testing">
            <TextBlock Text="123" />
            <RadioButton Content="test" />
        </controls:Section>-->

        <!-- Border serves as separator between sections and content -->

        <!--<Border BorderBrush="DarkGray" BorderThickness="1"
                Grid.Row="1" Margin="11,22,0,11"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />-->

        <!-- Content -->

        <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1">
            
            
        </StackPanel>
        
        <!-- Pages -->

        <Border BorderBrush="Black" BorderThickness="1"
                Width="Auto" Height="15" Grid.Row="1" Grid.Column="1" Margin="11"
                HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <TextBlock Text="1/1" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
        </Border>

    </Grid>
</Window>
