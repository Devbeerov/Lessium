<Window x:Class="Lessium.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:converters="clr-namespace:Lessium.Converters"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Width="1024" Height="768" Title="{Binding Title}" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:BooleanAndConverter x:Key="BooleanAndConverter" />
    </Window.Resources>
    <Grid>
        <!-- Rows (percentage space) -->
        <Grid.RowDefinitions>
            <RowDefinition Height="4*"/> <!-- Menu -->
            <RowDefinition Height="6*"/> <!-- Buttons, Pages -->
            <RowDefinition Height="90*"/> <!-- Content (material/test) -->
        </Grid.RowDefinitions>


        <!-- Columns (percentage space) -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80*"/> <!-- Left part of UI -->
            <ColumnDefinition Width="20*"/> <!-- Right part of UI (pages, settings) -->
        </Grid.ColumnDefinitions>
        
        
        <!-- 0 Row - Menu -->
        <StackPanel Orientation="Horizontal">
            <!-- Lesson Menu -->

            <Menu Name="LessonMenu" HorizontalAlignment="Left" VerticalAlignment="Top">
                <MenuItem Header="{Binding LessonHeader}">
                    <MenuItem Header="{Binding EditHeader}" Command="{Binding Lesson_Edit}"/>
                    <MenuItem Header="{Binding UndoChangesHeader}" Command="{Binding Lesson_UndoChanges}" />
                    <Separator />
                    <MenuItem Header="{Binding RecentHeader}" />
                    <Separator />
                    <MenuItem Header="{Binding NewLessonHeader}" Command="{Binding Lesson_New}" />
                    <!-- There's no need to do conditions for IsEnabled, because Command already handles it. -->
                    <MenuItem Header="{Binding SaveLessonHeader}" Command="{Binding Lesson_Save}" />
                    <MenuItem Header="{Binding LoadLessonHeader}" />
                    <MenuItem Header="{Binding CloseLessonHeader}" />
                    <Separator />
                    <MenuItem Header="{Binding PrintLessonHeader}" />
                    <Separator />
                    <MenuItem Header="{Binding ExitHeader}" />
                </MenuItem>
            </Menu>

            <!-- Tabs -->
            <TabControl Name="Tabs" HorizontalAlignment="Left" VerticalAlignment="Top">

                <!-- Material -->
                <TabItem Name="MaterialHeader" Header="{Binding MaterialHeader}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Materials"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TabItem>
                
                <!-- Tests -->
                <TabItem Name="TestsHeader" Header="{Binding TestsHeader}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <i:InvokeCommandAction Command="{Binding OnTabChanged}" CommandParameter="Tests"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TabItem>

            </TabControl>
        </StackPanel>
        
        <!-- 1 Row - Buttons, Pages -->

        <Button Grid.Row="1" Width="80" Height="20" HorizontalAlignment="Left" VerticalAlignment="Bottom" Content="{Binding ButtonAddHeader}">

        </Button>
        
        <!-- 2 Row - Content -->
        
        
        
    </Grid>
</Window>
