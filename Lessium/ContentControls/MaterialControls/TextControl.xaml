<UserControl x:Class="Lessium.ContentControls.MaterialControls.TextControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lessium.ContentControls.MaterialControls"
             xmlns:properties="clr-namespace:Lessium.Properties"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Lessium.Utility.Behaviors"
             xmlns:converters="clr-namespace:Lessium.Converters"
             xmlns:prop="clr-namespace:Lessium.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="200" 
             x:Name="control">

    <UserControl.Resources>
        <converters:ThicknessConverter x:Key="ThicknessConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <Border x:Name="border" SizeChanged="Border_SizeChanged">

        <Grid>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding ElementName=RemoveButtonPresenter, Path=ActualWidth}">
                    <!--<ColumnDefinition.Width>
                        <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="+">
                            <Binding ElementName="RemoveButtonPresenter" Path="ActualWidth" />
                            <Binding ElementName="textBox" Path="BorderThickness.Left" />
                            <Binding ElementName="textBox" Path="BorderThickness.Right" />
                        </MultiBinding>
                    </ColumnDefinition.Width>-->
                    <!--<ColumnDefinition.Style>
                        <Style TargetType="{x:Type ColumnDefinition}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=control, Path=MaxWidth, Converter={StaticResource ValidDoubleConverter}}" Value="True" >
                                    <DataTrigger.Setters>
                                        <Setter Property="MaxWidth">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="-" >
                                                    <Binding ElementName="control" Path="MaxWidth" />
                                                    <Binding ElementName="RemoveButtonPresenter" Path="ActualWidth" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>-->
                </ColumnDefinition>
            </Grid.ColumnDefinitions>

            <TextBox x:Name="textBox" VerticalAlignment="Top" HorizontalAlignment="Left"
                     TextWrapping="Wrap" Background="Transparent"
                     ScrollViewer.CanContentScroll="False"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                     MaxLines="38"
                     ToolTip="{x:Static properties:Resources.TextControl_Tooltip}"
                     IsReadOnly="{Binding IsEditable, Converter={StaticResource InverseBooleanConverter}}"
                     Text="{Binding ElementName=control, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="{Binding Source={x:Static prop:Settings.Default}, Path=FontSize}"
                     UndoLimit="{Binding Source={x:Static prop:Settings.Default}, Path=UndoLimit}" >

                <i:Interaction.Behaviors>
                    <behaviors:TextBoxNewlineBehavior />
                    <behaviors:TextBoxCutBehavior />
                </i:Interaction.Behaviors>

                <TextBox.InputBindings>
                    <KeyBinding Key="{Binding Source={x:Static prop:Hotkeys.Current}, Path=UndoHotkey.Key}" 
                                Modifiers="{Binding Source={x:Static prop:Hotkeys.Current}, Path=UndoHotkey.Modifier}"
                                Command="ApplicationCommands.Undo" />
                    <KeyBinding Key="{Binding Source={x:Static prop:Hotkeys.Current}, Path=RedoHotkey.Key}" 
                                Modifiers="{Binding Source={x:Static prop:Hotkeys.Current}, Path=RedoHotkey.Modifier}"
                                Command="ApplicationCommands.Redo" />
                </TextBox.InputBindings>

                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=control, Path=MaxWidth, Converter={StaticResource ValidDoubleConverter}}" Value="True" >
                                <DataTrigger.Setters>
                                    <Setter Property="MaxWidth">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="-" >
                                                <Binding ElementName="control" Path="MaxWidth" />
                                                <Binding ElementName="RemoveButtonPresenter" Path="ActualWidth" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=MaxWidth}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>

            </TextBox>

            <ContentPresenter x:Name="RemoveButtonPresenter" Grid.Column="1" MinWidth="16"
                              Loaded="RemoveButtonPresenter_Loaded"/>
        </Grid>
        
        <!--<StackPanel Orientation="Horizontal" x:Name="panel">

            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=control, Path=MaxWidth, Converter={StaticResource ValidDoubleConverter}}" Value="True" >
                            <DataTrigger.Setters>
                                <Setter Property="MaxWidth">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="-" >
                                            <Binding ElementName="control" Path="MaxWidth" />
                                            <Binding ElementName="RemoveButtonPresenter" Path="ActualWidth" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBox x:Name="textBox" VerticalAlignment="Top" HorizontalAlignment="Left"
                     TextWrapping="Wrap" Background="Transparent"
                     ScrollViewer.CanContentScroll="False"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                     MaxLines="38"
                     Width="{Binding ElementName=panel, Path=MaxWidth}"
                     ToolTip="{x:Static properties:Resources.TextControl_Tooltip}"
                     IsReadOnly="{Binding IsEditable, Converter={StaticResource InverseBooleanConverter}}"
                     Text="{Binding ElementName=control, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     FontSize="{Binding Source={x:Static prop:Settings.Default}, Path=FontSize}"
                     UndoLimit="{Binding Source={x:Static prop:Settings.Default}, Path=UndoLimit}" >

                <i:Interaction.Behaviors>
                    <behaviors:TextBoxNewlineBehavior />
                    <behaviors:TextBoxCutBehavior />
                </i:Interaction.Behaviors>

                <TextBox.InputBindings>
                    <KeyBinding Key="{Binding Source={x:Static prop:Hotkeys.Current}, Path=UndoHotkey.Key}" 
                                Modifiers="{Binding Source={x:Static prop:Hotkeys.Current}, Path=UndoHotkey.Modifier}"
                                Command="ApplicationCommands.Undo" />
                    <KeyBinding Key="{Binding Source={x:Static prop:Hotkeys.Current}, Path=RedoHotkey.Key}" 
                                Modifiers="{Binding Source={x:Static prop:Hotkeys.Current}, Path=RedoHotkey.Modifier}"
                                Command="ApplicationCommands.Redo" />
                </TextBox.InputBindings>

                

            </TextBox>

            <ContentPresenter x:Name="RemoveButtonPresenter" MinWidth="16" MinHeight="16"
                              Loaded="RemoveButtonPresenter_Loaded"/>
        </StackPanel>-->
    </Border>
    
</UserControl>
