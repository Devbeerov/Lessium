<UserControl x:Class="Lessium.ContentControls.TestControls.SimpleTest"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Lessium.ContentControls.TestControls"
             xmlns:properties="clr-namespace:Lessium.Properties"
             xmlns:materials="clr-namespace:Lessium.ContentControls.MaterialControls"
             xmlns:cc="clr-namespace:Lessium.CustomControls"
             xmlns:controls="clr-namespace:Lessium.CustomControls"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" 
             x:Name="control" >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Dictionaries/MainViewDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border x:Name="border">
        <Grid x:Name="grid" Style="{StaticResource ContentControlGridFixedWidthStyle}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel x:Name="contentPanel" Orientation="Vertical">

                <materials:TextControl x:Name="testQuestion"
                                       ToolTip="{x:Static properties:Resources.TextControl_Tooltip}"
                                       Text="{Binding Question, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=local:SimpleTest}}"
                                       IsEditable="{Binding IsEditable, RelativeSource={RelativeSource AncestorType=local:SimpleTest}}"
                                       MaxWidth="{Binding ElementName=control, Path=MaxWidth}"
                                       MaxHeight="{Binding ElementName=control, Path=MaxHeight}"
                                       SizeChanged="Question_SizeChanged" />

                <ItemsControl x:Name="AnswersItemControl" 
                              MaxHeight="{Binding ElementName=control, Path=MaxHeight}"
                              ItemsSource="{Binding Answers}" 
                              SizeChanged="AnswersItemControl_SizeChanged" >

                    <ItemsControl.MaxWidth>
                        <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="-">
                            <Binding ElementName="control" Path="MaxWidth" />
                            <Binding ElementName="controlRemoveButtonPresenter" Path="ActualWidth" />
                        </MultiBinding>
                    </ItemsControl.MaxWidth>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!-- "dataPanel" name is used in code-behind. -->
                            <StackPanel Orientation="Horizontal" x:Name="dataPanel">

                                <!-- "checkBox" name is used in code-behind. -->
                                <cc:DynamicCheckBox Grid.Column="1" x:Name="checkBox"
                                                    Width="16" Height="16"
                                                    HorizontalAlignment="Left" VerticalAlignment="Top"
                                                    DynamicCheckBoxTypeKey="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.CheckBoxType}" 
                                                    RadioButtonGroupName="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.GUID, Mode=OneTime}"
                                                    CheckBoxChecked="ToggleAnswerTrue_Checked"
                                                    CheckBoxUnchecked="ToggleAnswerTrue_Unchecked"
                                                    RadioButtonChecked="AnswerSelected"
                                                    RadioButtonUnchecked="AnswerUnselected"/>

                                <!-- TextControl. It's have it's own DataContext, so we bind to dataPanel.DataContext -->
                                <materials:TextControl x:Name="TextContainer"
                                                       IsEditable="{Binding IsEditable, RelativeSource={RelativeSource AncestorType=local:SimpleTest}}"
                                                       MaxWidth="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=MaxWidth}"
                                                       Text="{Binding ElementName=dataPanel, Path=DataContext.Text, Mode=TwoWay}"
                                                       Loaded="TextContainer_Loaded"
                                                       Unloaded="TextContainer_Unloaded" >

                                    <materials:TextControl.Style>
                                        <Style TargetType="{x:Type materials:TextControl}">
                                            <Setter Property="UsesCutBehavior" Value="False" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=MaxHeight, Converter={StaticResource ValidDoubleConverter}}" Value="True" >
                                                    <DataTrigger.Setters>
                                                        <Setter Property="UsesCutBehavior" Value="True" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </materials:TextControl.Style>
                                    
                                    <!-- Tag is not used anyway, therefore it seem to be acceptable implementation without spending much time -->
                                    <materials:TextControl.Tag>
                                        <MultiBinding Converter="{StaticResource UIElementsDistanceConverter}" ConverterParameter="Y">
                                            <Binding RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                            <Binding RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </materials:TextControl.Tag>
                                    
                                    <materials:TextControl.MaxHeight>
                                        <MultiBinding Converter="{StaticResource ArithmeticConverter}" ConverterParameter="-">
                                            <Binding RelativeSource="{RelativeSource AncestorType=ItemsControl}" Path="MaxHeight" />
                                            <Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
                                        </MultiBinding>
                                    </materials:TextControl.MaxHeight>
                                    
                                </materials:TextControl>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>

                <!-- Using code-behind instead of bindings, because there will be direct value changes and it will break bindings. -->
                <Button x:Name="addAnswerButton" HorizontalAlignment="Left"
                        Width="16" Height="16"
                        Click="AddAnswer_Click" > <!-- Have additional properties changes in code-behind (Border_SizeChanged) -->

                    <Image x:Name="addAnswerIcon" Source="{StaticResource ResourceKey=AddContentIcon}" />
                </Button>

            </StackPanel>

            <controls:RemoveButtonPresenter x:Name="controlRemoveButtonPresenter" Grid.Column="1" VerticalAlignment="Top" />

        </Grid>
    </Border>
</UserControl>